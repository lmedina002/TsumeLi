;;;; File containing all the functions for implementing the rules of shogi

(defun init-empty-board ()
  "Create an empty board indexed by letter rows and columns"
  (list
   :1 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :2 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :3 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :4 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :5 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :6 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :7 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :8 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")
   :9 '(:1 "" :2 "" :3 "" :4 "" :5 "" :6 "" :7 "" :8 "" :9 "")))

(defun select-square (board row number)
  "Return the piece on the square"
  (getf (getf board row) number))

(defun move (board row number)
  (move-piece (board (select-square board row number))))

;(defun move-piece (board piece direction)
;  (cond ((equal piece "P") (move-pawn))
	
(defun get-available-move (piece row number)
  (cond (equal piece "P") (get-move-pawn row number)
	(equal piece "L") (get-move-lance row number)
	(equal piece "N") (get-move-knight row number)
	(equal piece "S") (get-move-silver row number)
	(equal piece "G") (get-move-gold row number)
	(equal piece "B") (get-move-bishop row number)
	(equal piece "R") (get-move-rook row number)
	(equal piece "K") (get-move-knight row number)
	(equal piece "J") (get-move-jewel row number) ;roi adverse a voir si utile
	(equal piece "+R") (get-move-dragon row number)
	(equal piece "+B") (get-move-horse row number)
	(or (equal piece "+S") (equal piece "+N") (equal piece "+L") (equal piece "+P")) (get-move-gold row number)))

;;; All get-move-... function that return the available moves
(defun get-move-pawn (row number)
  (if (< number 
	
	
	
	
  
   
